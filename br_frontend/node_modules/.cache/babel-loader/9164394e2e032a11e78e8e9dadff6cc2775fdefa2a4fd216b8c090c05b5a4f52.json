{"ast":null,"code":"var _jsxFileName = \"D:\\\\Codes\\\\Final_project_demo\\\\br_frontend\\\\src\\\\pages\\\\Admin\\\\Genre\\\\GenreListPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport '../CSS/GenreList.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GenreListPage = ({\n  user\n}) => {\n  _s();\n  const [genres, setGenres] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (user.role !== 1) {\n      navigate('/');\n    } else {\n      fetchGenres();\n    }\n  }, [user.role, navigate]);\n  const fetchGenres = async () => {\n    try {\n      const response = await fetch('http://localhost:5231/api/genre');\n      const data = await response.json();\n      setGenres(data);\n    } catch (error) {\n      console.error(\"Error fetching genres:\", error);\n    }\n  };\n  const handleDelete = async id => {\n    if (window.confirm(\"Are you sure you want to delete this genre? This action cannot be undone.\")) {\n      try {\n        await fetch(`http://localhost:5231/api/genre/${id}`, {\n          method: 'DELETE'\n        });\n        fetchGenres();\n      } catch (error) {\n        console.error(\"Error deleting genre:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genre-list-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Genre List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/add-genre\",\n        className: \"genre-list-page-add-button\",\n        children: \"Add Genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"genre-list-page-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Genre ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Genre Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: genre.genreId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: genre.genreName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/genre/${genre.genreId}`,\n                className: \"genre-list-page-action-button\",\n                children: \"Detail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(genre.genreId),\n                className: \"genre-list-page-action-button\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)]\n          }, genre.genreId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(GenreListPage, \"FsWcRMwE2uh99uUa9QpNkCQSOnQ=\", false, function () {\n  return [useNavigate];\n});\n_c = GenreListPage;\nexport default GenreListPage;\nvar _c;\n$RefreshReg$(_c, \"GenreListPage\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","GenreListPage","user","_s","genres","setGenres","navigate","role","fetchGenres","response","fetch","data","json","error","console","handleDelete","id","window","confirm","method","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","map","genre","genreId","genreName","onClick","_c","$RefreshReg$"],"sources":["D:/Codes/Final_project_demo/br_frontend/src/pages/Admin/Genre/GenreListPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport '../CSS/GenreList.css';\r\n\r\nconst GenreListPage = ({ user }) => {\r\n    const [genres, setGenres] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (user.role !== 1) {\r\n            navigate('/');\r\n        } else {\r\n            fetchGenres();\r\n        }\r\n    }, [user.role, navigate]);\r\n\r\n    const fetchGenres = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5231/api/genre');\r\n            const data = await response.json();\r\n            setGenres(data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching genres:\", error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        if (window.confirm(\"Are you sure you want to delete this genre? This action cannot be undone.\")) {\r\n            try {\r\n                await fetch(`http://localhost:5231/api/genre/${id}`, {\r\n                    method: 'DELETE',\r\n                });\r\n                fetchGenres();\r\n            } catch (error) {\r\n                console.error(\"Error deleting genre:\", error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"genre-list-page-container\">\r\n                <h2>Genre List</h2>\r\n                <Link to=\"/add-genre\" className=\"genre-list-page-add-button\">Add Genre</Link>\r\n                <table className=\"genre-list-page-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Genre ID</th>\r\n                            <th>Genre Name</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {genres.map((genre) => (\r\n                            <tr key={genre.genreId}>\r\n                                <td>{genre.genreId}</td>\r\n                                <td>{genre.genreName}</td>\r\n                                <td>\r\n                                    <Link to={`/genre/${genre.genreId}`} className=\"genre-list-page-action-button\">Detail</Link>\r\n                                    <button onClick={() => handleDelete(genre.genreId)} className=\"genre-list-page-action-button\">Delete</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GenreListPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}