{"ast":null,"code":"var _jsxFileName = \"D:\\\\Codes\\\\Final_project_demo\\\\br_frontend\\\\src\\\\pages\\\\Account\\\\Account.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getUserIdFromToken, getUserRoleFromToken, getAuthHeaders } from '../../services/userAuth';\nimport axios from 'axios';\nimport '../../components/Account.css';\nimport Header from '../../components/Header';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5231';\nconst Account = () => {\n  _s();\n  const [userInfo, setUserInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [formData, setFormData] = useState({\n    fullName: '',\n    username: '',\n    email: '',\n    address: '',\n    phoneNumber: ''\n  });\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      const userId = parseInt(getUserIdFromToken(), 10);\n      if (isNaN(userId)) {\n        setError(\"Không xác định được người dùng.\");\n        setLoading(false);\n        return;\n      }\n      const role = getUserRoleFromToken();\n      try {\n        let response;\n        if (role === '0') {\n          response = await axios.get(`${API_BASE_URL}/api/Lesse/${userId}`, {\n            headers: getAuthHeaders()\n          });\n        } else if (role === '2') {\n          response = await axios.get(`${API_BASE_URL}/api/Staff/${userId}`, {\n            headers: getAuthHeaders()\n          });\n          setFormData({\n            fullName: response.data.fullName,\n            username: response.data.username,\n            email: response.data.email,\n            address: response.data.address,\n            phoneNumber: response.data.phoneNumber\n          });\n        } else {\n          setError(\"Vai trò không hợp lệ.\");\n          setLoading(false);\n          return;\n        }\n        setUserInfo(response.data);\n      } catch (error) {\n        console.error(\"Error fetching staff info:\", error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const role = getUserRoleFromToken();\n    try {\n      let response;\n      if (role === '2') {\n        response = await axios.put(`${API_BASE_URL}/api/Staff/update/${userInfo.userId}`, formData, {\n          headers: getAuthHeaders()\n        });\n      } else if (role === '0') {\n        response = await axios.put(`${API_BASE_URL}/api/Lesse/update/${userInfo.userId}`, formData, {\n          headers: getAuthHeaders()\n        });\n      }\n      setUserInfo(response.data);\n      alert(\"Cập nhật thông tin thành công!\");\n    } catch (error) {\n      console.error(\"Error updating info:\", error);\n      setError(\"Cập nhật không thành công.\");\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Account, \"PV5oBCPhy9MM+zoVPsPS1CRU038=\");\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useEffect","useState","getUserIdFromToken","getUserRoleFromToken","getAuthHeaders","axios","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","Account","_s","userInfo","setUserInfo","loading","setLoading","error","setError","formData","setFormData","fullName","username","email","address","phoneNumber","fetchUserInfo","userId","parseInt","isNaN","role","response","get","headers","data","console","message","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","put","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Codes/Final_project_demo/br_frontend/src/pages/Account/Account.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getUserIdFromToken, getUserRoleFromToken, getAuthHeaders } from '../../services/userAuth';\r\nimport axios from 'axios';\r\nimport '../../components/Account.css';\r\nimport Header from '../../components/Header';\r\n\r\nconst API_BASE_URL = 'http://localhost:5231';\r\n\r\nconst Account = () => {\r\n    const [userInfo, setUserInfo] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [formData, setFormData] = useState({\r\n        fullName: '',\r\n        username: '',\r\n        email: '',\r\n        address: '',\r\n        phoneNumber: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchUserInfo = async () => {\r\n            const userId = parseInt(getUserIdFromToken(), 10);\r\n            \r\n            if (isNaN(userId)) {\r\n                setError(\"Không xác định được người dùng.\");\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            const role = getUserRoleFromToken();\r\n            try {\r\n                let response;\r\n                if (role === '0') {\r\n                    response = await axios.get(`${API_BASE_URL}/api/Lesse/${userId}`, {\r\n                        headers: getAuthHeaders(),\r\n                    });\r\n                } else if (role === '2') {\r\n                    response = await axios.get(`${API_BASE_URL}/api/Staff/${userId}`, {\r\n                        headers: getAuthHeaders(),\r\n                    });\r\n                    setFormData({\r\n                        fullName: response.data.fullName,\r\n                        username: response.data.username,\r\n                        email: response.data.email,\r\n                        address: response.data.address,\r\n                        phoneNumber: response.data.phoneNumber,\r\n                    });\r\n                } else {\r\n                    setError(\"Vai trò không hợp lệ.\");\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n\r\n                setUserInfo(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching staff info:\", error);\r\n                setError(error.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchUserInfo();\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const role = getUserRoleFromToken();\r\n        try {\r\n            let response;\r\n            if (role === '2') {\r\n                response = await axios.put(`${API_BASE_URL}/api/Staff/update/${userInfo.userId}`, formData, {\r\n                    headers: getAuthHeaders(),\r\n                });\r\n            } else if (role === '0') {\r\n                response = await axios.put(`${API_BASE_URL}/api/Lesse/update/${userInfo.userId}`, formData, {\r\n                    headers: getAuthHeaders(),\r\n                });\r\n            }\r\n\r\n            setUserInfo(response.data);\r\n            alert(\"Cập nhật thông tin thành công!\");\r\n        } catch (error) {\r\n            console.error(\"Error updating info:\", error);\r\n            setError(\"Cập nhật không thành công.\");\r\n        }\r\n    };\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>{error}</div>;\r\n\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Account;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}