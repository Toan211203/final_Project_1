{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport { Link } from 'react-router-dom';\nconst API_BASE_URL = 'http://localhost:5000'; // Thay bằng URL backend thực tế\n\nconst HomePage = () => {\n  _s();\n  const [newBooks, setNewBooks] = useState([]);\n  const [popularBooks, setPopularBooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        // Fetch newest books\n        const newBooksResponse = await fetch(`${API_BASE_URL}/api/book?sort=newest&limit=5`, {\n          headers: {\n            'Accept': 'application/json'\n          },\n          credentials: 'include' // Nếu cần gửi cookie/token\n        });\n        if (!newBooksResponse.ok) {\n          throw new Error(`HTTP error! status: ${newBooksResponse.status}`);\n        }\n        const newBooksData = await newBooksResponse.json();\n        setNewBooks(newBooksData);\n\n        // Fetch popular books\n        const popularBooksResponse = await fetch(`${API_BASE_URL}/api/book?sort=popular&limit=5`, {\n          headers: {\n            'Accept': 'application/json'\n          },\n          credentials: 'include' // Nếu cần gửi cookie/token\n        });\n        if (!popularBooksResponse.ok) {\n          throw new Error(`HTTP error! status: ${popularBooksResponse.status}`);\n        }\n        const popularBooksData = await popularBooksResponse.json();\n        setPopularBooks(popularBooksData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching books:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchBooks();\n  }, []);\n\n  // ... (phần render giữ nguyên như trước)\n};\n_s(HomePage, \"QflVZEwV0ushm49ySHIfsH7MIQU=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","Header","Link","API_BASE_URL","HomePage","_s","newBooks","setNewBooks","popularBooks","setPopularBooks","loading","setLoading","error","setError","fetchBooks","newBooksResponse","fetch","headers","credentials","ok","Error","status","newBooksData","json","popularBooksResponse","popularBooksData","console","message","_c","$RefreshReg$"],"sources":["D:/Codes/Final_project_demo/br_frontend/src/pages/HomePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Header from '../components/Header';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000'; // Thay bằng URL backend thực tế\r\n\r\nconst HomePage = () => {\r\n  const [newBooks, setNewBooks] = useState([]);\r\n  const [popularBooks, setPopularBooks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchBooks = async () => {\r\n      try {\r\n        // Fetch newest books\r\n        const newBooksResponse = await fetch(`${API_BASE_URL}/api/book?sort=newest&limit=5`, {\r\n          headers: {\r\n            'Accept': 'application/json',\r\n          },\r\n          credentials: 'include' // Nếu cần gửi cookie/token\r\n        });\r\n\r\n        if (!newBooksResponse.ok) {\r\n          throw new Error(`HTTP error! status: ${newBooksResponse.status}`);\r\n        }\r\n\r\n        const newBooksData = await newBooksResponse.json();\r\n        setNewBooks(newBooksData);\r\n      \r\n        // Fetch popular books\r\n        const popularBooksResponse = await fetch(`${API_BASE_URL}/api/book?sort=popular&limit=5`, {\r\n          headers: {\r\n            'Accept': 'application/json',\r\n          },\r\n          credentials: 'include' // Nếu cần gửi cookie/token\r\n        });\r\n\r\n        if (!popularBooksResponse.ok) {\r\n          throw new Error(`HTTP error! status: ${popularBooksResponse.status}`);\r\n        }\r\n\r\n        const popularBooksData = await popularBooksResponse.json();\r\n        setPopularBooks(popularBooksData);\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching books:', error);\r\n        setError(error.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBooks();\r\n  }, []);\r\n\r\n  // ... (phần render giữ nguyên như trước)\r\n};\r\n\r\nexport default HomePage;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,MAAMC,YAAY,GAAG,uBAAuB,CAAC,CAAC;;AAE9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF;QACA,MAAMC,gBAAgB,GAAG,MAAMC,KAAK,CAAC,GAAGb,YAAY,+BAA+B,EAAE;UACnFc,OAAO,EAAE;YACP,QAAQ,EAAE;UACZ,CAAC;UACDC,WAAW,EAAE,SAAS,CAAC;QACzB,CAAC,CAAC;QAEF,IAAI,CAACH,gBAAgB,CAACI,EAAE,EAAE;UACxB,MAAM,IAAIC,KAAK,CAAC,uBAAuBL,gBAAgB,CAACM,MAAM,EAAE,CAAC;QACnE;QAEA,MAAMC,YAAY,GAAG,MAAMP,gBAAgB,CAACQ,IAAI,CAAC,CAAC;QAClDhB,WAAW,CAACe,YAAY,CAAC;;QAEzB;QACA,MAAME,oBAAoB,GAAG,MAAMR,KAAK,CAAC,GAAGb,YAAY,gCAAgC,EAAE;UACxFc,OAAO,EAAE;YACP,QAAQ,EAAE;UACZ,CAAC;UACDC,WAAW,EAAE,SAAS,CAAC;QACzB,CAAC,CAAC;QAEF,IAAI,CAACM,oBAAoB,CAACL,EAAE,EAAE;UAC5B,MAAM,IAAIC,KAAK,CAAC,uBAAuBI,oBAAoB,CAACH,MAAM,EAAE,CAAC;QACvE;QAEA,MAAMI,gBAAgB,GAAG,MAAMD,oBAAoB,CAACD,IAAI,CAAC,CAAC;QAC1Dd,eAAe,CAACgB,gBAAgB,CAAC;QAEjCd,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdc,OAAO,CAACd,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CC,QAAQ,CAACD,KAAK,CAACe,OAAO,CAAC;QACvBhB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF,CAAC;AAACT,EAAA,CAnDID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAqDd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}