{"ast":null,"code":"var _jsxFileName = \"D:\\\\Codes\\\\Final_project_demo\\\\br_frontend\\\\src\\\\pages\\\\Book\\\\ReviewBook.jsx\",\n  _s = $RefreshSig$();\n// ReviewBook.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getUserIdFromToken } from '../../services/userAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5231';\nconst ReviewBook = ({\n  book\n}) => {\n  _s();\n  const [rating, setRating] = useState(1);\n  const [reviewComment, setReviewComment] = useState('');\n  const navigate = useNavigate();\n  const handleSubmitReview = async () => {\n    const userId = getUserIdFromToken();\n    if (!userId) {\n      alert('Please log in before submitting a review.');\n      return;\n    }\n    const payload = {\n      userId,\n      bookId: book.bookId,\n      rating,\n      comment: reviewComment\n    };\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/review`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(payload)\n      });\n      if (response.ok) {\n        alert('Review submitted successfully!');\n        navigate(`/book/${book.bookId}`);\n      } else {\n        const err = await response.json();\n        alert(`Error submitting review: ${err.message || response.statusText}`);\n      }\n    } catch (err) {\n      console.error('API call error:', err);\n      alert('An error occurred, please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-book-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Rate \", book.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rating\",\n        className: \"form-label\",\n        children: \"Rating:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"rating\",\n        className: \"form-select\",\n        value: rating,\n        onChange: e => setRating(parseInt(e.target.value)),\n        children: [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: star,\n          children: star\n        }, star, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"reviewComment\",\n        className: \"form-label\",\n        children: \"Comment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"reviewComment\",\n        className: \"form-control\",\n        value: reviewComment,\n        onChange: e => setReviewComment(e.target.value),\n        rows: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleSubmitReview,\n      children: \"Submit Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(ReviewBook, \"CAjYWBQA8tZkK9b05JhQPPX81h0=\", false, function () {\n  return [useNavigate];\n});\n_c = ReviewBook;\nexport default ReviewBook;\nvar _c;\n$RefreshReg$(_c, \"ReviewBook\");","map":{"version":3,"names":["React","useState","useNavigate","getUserIdFromToken","jsxDEV","_jsxDEV","API_BASE_URL","ReviewBook","book","_s","rating","setRating","reviewComment","setReviewComment","navigate","handleSubmitReview","userId","alert","payload","bookId","comment","response","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","ok","err","json","message","statusText","console","error","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","parseInt","target","map","star","rows","onClick","_c","$RefreshReg$"],"sources":["D:/Codes/Final_project_demo/br_frontend/src/pages/Book/ReviewBook.jsx"],"sourcesContent":["// ReviewBook.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getUserIdFromToken } from '../../services/userAuth';\r\n\r\nconst API_BASE_URL = 'http://localhost:5231';\r\n\r\nconst ReviewBook = ({ book }) => {\r\n    const [rating, setRating] = useState(1);\r\n    const [reviewComment, setReviewComment] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmitReview = async () => {\r\n        const userId = getUserIdFromToken();\r\n        if (!userId) {\r\n            alert('Please log in before submitting a review.');\r\n            return;\r\n        }\r\n\r\n        const payload = {\r\n            userId,\r\n            bookId: book.bookId,\r\n            rating,\r\n            comment: reviewComment,\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/api/review`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert('Review submitted successfully!');\r\n                navigate(`/book/${book.bookId}`);\r\n            } else {\r\n                const err = await response.json();\r\n                alert(`Error submitting review: ${err.message || response.statusText}`);\r\n            }\r\n        } catch (err) {\r\n            console.error('API call error:', err);\r\n            alert('An error occurred, please try again later.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"review-book-container\">\r\n            <h2>Rate {book.title}</h2>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"rating\" className=\"form-label\">Rating:</label>\r\n                <select\r\n                    id=\"rating\"\r\n                    className=\"form-select\"\r\n                    value={rating}\r\n                    onChange={(e) => setRating(parseInt(e.target.value))}\r\n                >\r\n                    {[1, 2, 3, 4, 5].map((star) => (\r\n                        <option key={star} value={star}>{star}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"reviewComment\" className=\"form-label\">Comment:</label>\r\n                <textarea\r\n                    id=\"reviewComment\"\r\n                    className=\"form-control\"\r\n                    value={reviewComment}\r\n                    onChange={(e) => setReviewComment(e.target.value)}\r\n                    rows=\"4\"\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={handleSubmitReview}>\r\n                Submit Review\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReviewBook;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,kBAAkB,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,MAAM,GAAGb,kBAAkB,CAAC,CAAC;IACnC,IAAI,CAACa,MAAM,EAAE;MACTC,KAAK,CAAC,2CAA2C,CAAC;MAClD;IACJ;IAEA,MAAMC,OAAO,GAAG;MACZF,MAAM;MACNG,MAAM,EAAEX,IAAI,CAACW,MAAM;MACnBT,MAAM;MACNU,OAAO,EAAER;IACb,CAAC;IAED,IAAI;MACA,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGhB,YAAY,aAAa,EAAE;QACvDiB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC1D,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,OAAO;MAChC,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACU,EAAE,EAAE;QACbd,KAAK,CAAC,gCAAgC,CAAC;QACvCH,QAAQ,CAAC,SAASN,IAAI,CAACW,MAAM,EAAE,CAAC;MACpC,CAAC,MAAM;QACH,MAAMa,GAAG,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QACjChB,KAAK,CAAC,4BAA4Be,GAAG,CAACE,OAAO,IAAIb,QAAQ,CAACc,UAAU,EAAE,CAAC;MAC3E;IACJ,CAAC,CAAC,OAAOH,GAAG,EAAE;MACVI,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEL,GAAG,CAAC;MACrCf,KAAK,CAAC,4CAA4C,CAAC;IACvD;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAKiC,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBAClClC,OAAA;MAAAkC,QAAA,GAAI,OAAK,EAAC/B,IAAI,CAACgC,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1BvC,OAAA;MAAKiC,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBlC,OAAA;QAAOwC,OAAO,EAAC,QAAQ;QAACP,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9DvC,OAAA;QACIyC,EAAE,EAAC,QAAQ;QACXR,SAAS,EAAC,aAAa;QACvBS,KAAK,EAAErC,MAAO;QACdsC,QAAQ,EAAGC,CAAC,IAAKtC,SAAS,CAACuC,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,CAAE;QAAAR,QAAA,EAEpD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACa,GAAG,CAAEC,IAAI,iBACtBhD,OAAA;UAAmB0C,KAAK,EAAEM,IAAK;UAAAd,QAAA,EAAEc;QAAI,GAAxBA,IAAI;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6B,CACjD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACNvC,OAAA;MAAKiC,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBlC,OAAA;QAAOwC,OAAO,EAAC,eAAe;QAACP,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtEvC,OAAA;QACIyC,EAAE,EAAC,eAAe;QAClBR,SAAS,EAAC,cAAc;QACxBS,KAAK,EAAEnC,aAAc;QACrBoC,QAAQ,EAAGC,CAAC,IAAKpC,gBAAgB,CAACoC,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAE;QAClDO,IAAI,EAAC;MAAG;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNvC,OAAA;MAAQiC,SAAS,EAAC,iBAAiB;MAACiB,OAAO,EAAExC,kBAAmB;MAAAwB,QAAA,EAAC;IAEjE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACnC,EAAA,CAzEIF,UAAU;EAAA,QAGKL,WAAW;AAAA;AAAAsD,EAAA,GAH1BjD,UAAU;AA2EhB,eAAeA,UAAU;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}